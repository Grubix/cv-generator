{"version":3,"sources":["base/utils.js"],"names":["global","factory","exports","module","define","amd","self","utils","this","isObject","item","Array","isArray","isElement","Element","HTMLDocument","attr","el","attributes","key","value","Object","entries","Error","style","data","dataset","forEach","className","classList","add","setAttribute","query","arg1","arg2","TypeError","document","createTextNode","querySplit","replace","split","element","createElement","i","length","append","serialize","object","tokens","extractToken","prefix","subPrefix","keys","ecnodedValue","encodeURIComponent","push","join","remove","parentNode","removeChild","text","id","elementId","getElementById","querySelectorAll","bounds","getBoundingClientRect","styles","on","events","targets","func","eventsArray","targetsArray","ev","addEventListener","off","event","target","removeEventListener","empty","firstChild","lastChild","pick","o","properties","assign","map","property","[object Object]","pickStyle","computedStyle","getComputedStyle","clamp","min","max","px","expression","parent","body","tempElement","marginTop","computedWidth","parseFloat","ajax","settings","s","method","returnType","url","headers","Promise","resolve","reject","xhr","XMLHttpRequest","onreadystatechange","readyState","status","responseText","JSON","parse","e","console","error","responseXML","toUpperCase","open","header","setRequestHeader","send","defineProperty"],"mappings":"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","file":"../../base/utils.js","sourcesContent":["/* kdom */\r\n\r\n/**\r\n *\r\n * @param {*} item\r\n */\r\nexport function isObject(item) {\r\n    return item && typeof item === 'object' && !Array.isArray(item);\r\n}\r\n\r\n/**\r\n *\r\n * @param {*} item\r\n */\r\nexport function isElement(item) {\r\n    return item && (item instanceof Element || item instanceof HTMLDocument);\r\n}\r\n\r\n/**\r\n *\r\n * @param {*} el\r\n * @param {*} attributes\r\n */\r\nexport function attr(el, attributes) {\r\n    for (const [key, value] of Object.entries(attributes)) {\r\n        if (!value) {\r\n            continue;\r\n        }\r\n\r\n        if (key === 'style') {\r\n            if (isObject(value)) {\r\n                for (const style in value) {\r\n                    el.style[style] = value[style];\r\n                }\r\n            } else {\r\n                throw new Error('style property must be an object');\r\n            }\r\n        } else if (key === 'dataset') {\r\n            if (isObject(value)) {\r\n                for (const data in value) {\r\n                    el.dataset[data] = value[data];\r\n                }\r\n            } else {\r\n                throw new Error('dataset property must be an object');\r\n            }\r\n        } else if (key === 'class') {\r\n            if (Array.isArray(value)) {\r\n                value.forEach(className => {\r\n                    el.classList.add(className);\r\n                });\r\n            } else {\r\n                throw new Error('class property must be an array');\r\n            }\r\n        } else if (key in el || typeof value === 'function') {\r\n            el[key] = value;\r\n        } else {\r\n            el.setAttribute(key, value);\r\n        }\r\n    }\r\n}\r\n\r\n/**\r\n *\r\n * @param {*} query\r\n * @param {*} arg1\r\n * @param {*} arg2\r\n */\r\nexport function el(query, arg1, arg2) {\r\n    if (typeof query !== 'string') {\r\n        throw new TypeError('query must be a string');\r\n    }\r\n\r\n    if (query === 'text') {\r\n        if (typeof arg1 === 'string') {\r\n            return document.createTextNode(arg1);\r\n        } else {\r\n            throw new TypeError('arg1 must be a string for \\'text\\' type');\r\n        }\r\n    }\r\n\r\n    const querySplit = (query || 'div').replace(/\\s+/g, '.').split('.');\r\n    const element = document.createElement(querySplit[0]);\r\n\r\n    for (let i = 1; i < querySplit.length; i++) {\r\n        element.classList.add(querySplit[i]);\r\n    }\r\n\r\n    if (arg1) {\r\n        if (isObject(arg1)) {\r\n            if (isElement(arg1)) {\r\n                element.append(arg1);\r\n            } else {\r\n                attr(element, arg1);\r\n            }\r\n        } else if (Array.isArray(arg1)) {\r\n            arg1.forEach(el => {\r\n                if (el) {\r\n                    element.append(el);\r\n                }\r\n            });\r\n        } else {\r\n            element.append(arg1);\r\n        }\r\n    }\r\n\r\n    if (arg2) {\r\n        if (Array.isArray(arg2)) {\r\n            arg2.forEach(el => {\r\n                if (el) {\r\n                    element.append(el);\r\n                }\r\n            });\r\n        } else {\r\n            element.append(arg2);\r\n        }\r\n    }\r\n\r\n    return element;\r\n}\r\n\r\nexport function remove(el) {\r\n    if (el.parentNode) {\r\n        el.parentNode.removeChild(el);\r\n    }\r\n}\r\n\r\nexport function text(text) {\r\n    return document.createTextNode(text);\r\n}\r\n\r\n/**\r\n * Shorcut for getElementById method\r\n * @param {*} elementId id of the element\r\n */\r\nexport function id(elementId) {\r\n    return document.getElementById(elementId);\r\n}\r\n\r\n/**\r\n * Shorcut for querySelectorAll method\r\n * @param {*} query\r\n */\r\nexport function query(query) {\r\n    return [...document.querySelectorAll(query)];\r\n}\r\n\r\nexport function bounds(el) {\r\n    return el.getBoundingClientRect();\r\n}\r\n\r\nexport function style(el, styles) {\r\n    for (const style in styles) {\r\n        el.style[style] = styles[style];\r\n    }\r\n\r\n    return el;\r\n}\r\n\r\nexport function on(events, targets, func) {\r\n    if (!events || !targets) {\r\n        throw new Error('\\'events\\' and \\'targets\\' must not be null');\r\n    }\r\n\r\n    let eventsArray;\r\n    let targetsArray;\r\n\r\n    if (Array.isArray(events)) {\r\n        eventsArray = events;\r\n    } else if (typeof events === 'string') {\r\n        eventsArray = [events];\r\n    } else {\r\n        throw new TypeError('\\'events\\' must be either an Array or string.');\r\n    }\r\n\r\n    if (Array.isArray(targets)) {\r\n        targetsArray = targets;\r\n    } else if (isObject(targets)) {\r\n        targetsArray = [targets];\r\n    } else if (typeof targets === 'string') {\r\n        targetsArray = [...document.querySelectorAll(targets)];\r\n    } else {\r\n        throw new TypeError('\\'targets\\' must be either an Array, Element or query string.');\r\n    }\r\n\r\n    targetsArray.forEach(el => {\r\n        eventsArray.forEach(ev => {\r\n            el.addEventListener(ev, func, true);\r\n        });\r\n    });\r\n\r\n    return func;\r\n}\r\n\r\n/**\r\n * Removes event listener of specified type from target\r\n * @param {*} event event type\r\n * @param {*} target target element\r\n * @param {*} func function registered for event\r\n */\r\nexport function off(event, target, func) {\r\n    target.removeEventListener(event, func);\r\n}\r\n\r\n/**\r\n * Removes all children from element\r\n * @param {*} el element\r\n */\r\nexport function empty(el) {\r\n    while (el.firstChild) {\r\n        el.removeChild(el.lastChild);\r\n    }\r\n\r\n    return el;\r\n}\r\n\r\n/**\r\n * Picks specified properties from object o\r\n * @param {*} o source object\r\n * @param  {...any} properties properties to pick\r\n */\r\nexport function pick(o, ...properties) {\r\n    return Object.assign({}, ...properties.map(property => {\r\n        return { [property]: o[property] };\r\n    }));\r\n}\r\n\r\nexport function pickStyle(el, ...styles) {\r\n    const computedStyle = getComputedStyle(el);\r\n\r\n    return Object.assign({}, ...styles.map(property => {\r\n        return { [property]: el.style[property] ? el.style[property] : computedStyle[property] };\r\n    }));\r\n}\r\n\r\n/**\r\n * Clamp value in range specified by min and max\r\n * @param {*} value value to be clamped\r\n * @param {*} min min value\r\n * @param {*} max max value\r\n */\r\nexport function clamp(value, min, max) {\r\n    return value < min ? min : value > max ? max : value;\r\n}\r\n\r\n/**\r\n * Convert any css value expression (eg. .25rem, calc(20em + 2.5in)) to pixels\r\n * @param {*} expression\r\n */\r\nexport function px(expression, parent = document.body) {\r\n    const tempElement = el('div', {\r\n        style: {\r\n            marginTop: expression\r\n        }\r\n    });\r\n\r\n    parent.append(tempElement);\r\n\r\n    const computedWidth = getComputedStyle(tempElement).marginTop;\r\n\r\n    parent.removeChild(tempElement);\r\n\r\n    return parseFloat(computedWidth);\r\n}\r\n\r\nexport function serialize(object) {\r\n    if (!object) {\r\n        return '';\r\n    }\r\n\r\n    const tokens = [];\r\n\r\n    const extractToken = (key, value, prefix) => {\r\n        if (Array.isArray(value)) {\r\n            const subPrefix = prefix + ((prefix.length == 0) ? key : '[' + key + ']');\r\n            value.forEach((el, i) => {\r\n                extractToken(i, el, subPrefix);\r\n            });\r\n        } else if (value instanceof Object) {\r\n            const subPrefix = prefix + ((prefix.length == 0) ? key : '[' + key + ']');\r\n            Object.keys(value).forEach(key => {\r\n                extractToken(key, value[key], subPrefix);\r\n            });\r\n        } else {\r\n            const ecnodedValue = encodeURIComponent(value);\r\n            tokens.push((prefix.length == 0) ? key + '=' + ecnodedValue : prefix + '[' + key + ']=' + ecnodedValue);\r\n        }\r\n    };\r\n\r\n    Object.keys(object).forEach(key => {\r\n        extractToken(key, object[key], '');\r\n    });\r\n\r\n    return tokens.join('&');\r\n}\r\n\r\nexport function ajax(settings) {\r\n    const defaults = {\r\n        method: 'GET',\r\n        returnType: 'text', // text | xml | json\r\n        url: null,\r\n        headers: null,\r\n        data: null\r\n    };\r\n\r\n    const s = Object.assign({}, defaults, (typeof settings === 'object') ? settings : { url: settings });\r\n\r\n    if (!s.url) {\r\n        throw new Error('URL is not defined');\r\n    }\r\n\r\n    return new Promise((resolve, reject) => {\r\n        const xhr = new XMLHttpRequest();\r\n\r\n        xhr.onreadystatechange = function() {\r\n            if (this.readyState == 4) {\r\n                if (this.status == 200) {\r\n                    switch (s.returnType) {\r\n                    case 'text':\r\n                        resolve(xhr.responseText);\r\n                        break;\r\n                    case 'json':\r\n                        try {\r\n                            resolve(JSON.parse(xhr.responseText));\r\n                        } catch (e) {\r\n                            console.error(xhr.responseText); // FIXME POTEM KONIECZNIE WYWALIC\r\n                            reject(e);\r\n                        }\r\n                        break;\r\n                    case 'xml':\r\n                        resolve(xhr.responseXML);\r\n                        break;\r\n                    default:\r\n                        reject(new Error('Unknown return type: ' + s.returnType));\r\n                        break;\r\n                    }\r\n                } else {\r\n                    reject(new Error('Request failed with status: ' + xhr.status));\r\n                }\r\n            }\r\n        };\r\n\r\n        if (s.method.toUpperCase() == 'GET') {\r\n            xhr.open('GET', s.url + '?' + serialize(s.data), true);\r\n\r\n            // console.log(s.url + '?' + serialize(s.data)); TODO for debugginf\r\n\r\n            if (isObject(s.headers)) {\r\n                Object.keys(s.headers).forEach(header => {\r\n                    xhr.setRequestHeader(header, s.headers[header]);\r\n                });\r\n            }\r\n\r\n            xhr.send();\r\n        } else if (s.method.toUpperCase() == 'POST') {\r\n            xhr.open('POST', s.url, true);\r\n\r\n            if (isObject(s.headers)) {\r\n                Object.keys(s.headers).forEach(header => {\r\n                    xhr.setRequestHeader(header, s.headers[header]);\r\n                });\r\n            } else {\r\n                xhr.setRequestHeader('content-type', 'application/x-www-form-urlencoded; charset=UTF-8');\r\n            }\r\n\r\n            xhr.send(serialize(s.data));\r\n        }\r\n    });\r\n}\r\n"]}